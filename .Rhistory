df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumerPerMinute, GLOBALACTIVEPOWER, VOLTAGE from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumerPerMinute, GLOBALACTIVEPOWER, VOLTAGE from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumerPerMinute, GLOBALACTIVEPOWER, VOLTAGE from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Active Energy Consumer Per Minute", y="Global Active Power") +
layer(data=df_mainData,
mapping=aes(x=as.numeric(as.character(ActiveEnergyConsumerPerMinute)), y=as.numeric(as.character(GlobalActivePower)), color=Voltage),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute, GLOBALACTIVEPOWER, VOLTAGE from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Active Energy Consumer Per Minute", y="Global Active Power") +
layer(data=df_mainData,
mapping=aes(x=as.numeric(as.character(ActiveEnergyConsumedPerMinute)), y=as.numeric(as.character(GlobalActivePower)), color=Voltage),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute, GLOBALACTIVEPOWER, VOLTAGE from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Active Energy Consumer Per Minute", y="Global Active Power") +
layer(data=df_mainData,
mapping=aes(x=as.numeric(as.character(ACTIVEENERGYCONSUMERPERMINUTE)), y=as.numeric(as.character(GLOBALACTIVEPOWER)), color=VOLTAGE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Active Energy Consumer Per Minute", y="Global Active Power") +
layer(data=df_mainData,
mapping=aes(x=as.numeric(as.character(ACTIVEENERGYCONSUMEDPERMINUTE)), y=as.numeric(as.character(GLOBALACTIVEPOWER)), color=VOLTAGE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute, * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select *, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select Date, Time, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select Date, Time, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select Date, Time, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View()
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select MID(DATE_TIME, 4, 2) As Month, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select SubString(DATE_TIME, 4, 2) As Month, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DateFull, TimeFull, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DateFull, TimeFull, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DateFull, TimeFull, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DateFull, TimeFull, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DateFull, TimeFull, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DateFull, TimeFull, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData %>% View
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DateFull, TimeFull, DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 %>% mutate(month = substr(DateFull, '/', 2))
df_Data2 %>% mutate(month = substr(DateFull, '/', 2)) %>% View
df_Data2 %>% mutate(month = substr(DateFull, 3, 2)) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select YEAR(DateFull) As Year from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 %>% mutate(MONTH = substr(DateFull, 4, 6)) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 %>% mutate(MONTH = substr(DateFull, 4, 6)) %>% View
df_Data2 %>% mutate(YEAR = strsplit(DateFull, "/")[[2]]) %>% View
df_Data2 %>% mutate(YEAR = strsplit(DateFull, "/")) %>% View
df_Data2 %>% mutate(YEAR = strsplit(DateFull, "/")[2]) %>% View
df_Data2 %>% mutate(YEAR = strsplit(DateFull, "/", fixed=TRUE)[2]) %>% View
df_Data2 %>% mutate(YEAR = strsplit(as.character(DateFull), "/", fixed=TRUE)[2]) %>% View
df_Data2 %>% mutate(MONTH = strsplit(DateFull, "/") %>% View
df_Data2 %>% mutate(MONTH = strsplit(DateFull, "/")) %>% View
df_Data2 %>% mutate(MONTH = strsplit(DateFull, "/")) %>% View
df_Data2 %>% mutate(YEAR = substring(DateFull, length(DateFull) - 4, length(DateFull))) %>% View
df_Data2 %>% mutate(YEAR = substring(DateFull, length(DateFull) - 5, length(DateFull) - 4)) %>% View
df_Data2 %>% mutate(YEAR = substring(DateFull, 6, 10)) %>% View
df_Data2 %>% mutate(YEAR = substring(DateFull, length(DateFull) - 3, length(DateFull))) %>% View
length(DATEFULL)
df_Data2 %>% length(DATEFULL)
df_Data2 %>% mutate(dateLength = length(DATEFULL)) %>% View
df_Data2 %>% mutate(dateLength = length(DateFull)) %>% View
df_Data2 %>% mutate(dateLength = nchar(DateFull)) %>% View
df_Data2 %>% mutate(dateLength = nchar(DateFull)) %>% View
nchar(df_Data2$DateFull)
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select *, LEN(DATEFULL) as DateFullLength from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
splitDateFull <- strsplit(df_Data2$DateFull, "/")
splitDateFull
splitDateFull <- strsplit(as.character(df_Data2$DateFull), "/")
splitDateFull
df_Data2 %>% mutate(YEAR = strsplit(as.character(df_Data2$DateFull), "/")) %>% View
df_Data2 %>% mutate(YEAR = strsplit(as.character(df_Data2$DateFull), "/")[3]) %>% View
df_Data2 %>% mutate(YEAR = strsplit(as.character(df_Data2$DateFull), "/")) %>% View
df_Data2 %>% mutate(Year = DayMonthYear[3]) %>% View
df_Data2 %>% View
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(df_Data2$DateFull), "/")) %>% df_Data2
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(df_Data2$DateFull), "/"))
df_Data2 %>% View
df_Data2 %>% mutate(YEAR = DayMonthYear[3]) %>% View
df_Data2 %>% mutate(YEAR = DayMonthYear[[3]]) %>% View
nchar(df_Data2$DateFull)
df_Data2 %>% mutate(YEAR = DayMonthYear[[1]]) %>% View
df_Data2 %>% mutate(YEAR = DayMonthYear[[1]]) %>% View
df_Data2$DayMonthYear
df_Data2 %>% mutate(YEAR = DayMonthYear[1][3]) %>% View
df_Data2 %>% mutate(YEAR = DayMonthYear[[1]][[3]]) %>% View
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(df_Data2$DateFull), "/"))
df_Data2 <- df_Data2 %>% mutate(YEAR = DayMonthYear[[1]][[3]]) %>% View
df_Data2 <- df_Data2 %>% mutate(MONTH = DayMonthYear[[1]][[2]]) %>% View
df_Data2 <- df_Data2%>% mutate(DAY = DayMonthYear[[1]][[1]]) %>% View
df_Data2 <- df_Data2 %>% mutate(HourMinuteSecond = strsplit(as.character(df_Data2$TimeFull), ";"))
df_Data2 <- df_Data2 %>% mutate(HOUR = HourMinuteSecond[[1]][[1]])
df_Data2 <- df_Data2 %>% mutate(YEAR = DayMonthYear[[1]][[3]]) %>% View
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df_mainData <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select DATE_TIME, GLOBALACTIVEPOWER, GLOBALREACTIVEPOWER, VOLTAGE, GLOBALINTENSITY, SUBMETERING1, SUBMETERING2, SUBMETERING3, GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3 as ActiveEnergyConsumedPerMinute from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
splitDateFull <- strsplit(as.character(df_Data2$DateFull), "/")
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(df_Data2$DateFull), "/"))
df_Data2 <- df_Data2 %>% mutate(YEAR = DayMonthYear[[1]][[3]]) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(df_Data2$DateFull), "/"))
df_Data2 <- df_Data2 %>% mutate(YEAR = DayMonthYear[[1]][[3]])
df_Data2 <- df_Data2 %>% mutate(MONTH = DayMonthYear[[1]][[2]])
df_Data2 <- df_Data2%>% mutate(DAY = DayMonthYear[[1]][[1]])
df_Data2 <- df_Data2 %>% mutate(HourMinuteSecond = strsplit(as.character(df_Data2$TimeFull), ";"))
df_Data2 <- df_Data2 %>% mutate(HOUR = HourMinuteSecond[[1]][[1]])
df_Data2
df_Data2 <- df_Data2 %>% mutate(HOUR = HourMinuteSecond[[1]][[1]])
df_Data2
df_Data2 <- df_Data2 %>% mutate(HOUR = HourMinuteSecond[[1]][[1]]) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(df_Data2$DateFull), "/")[[1]][[3]]) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(df_Data2$DateFull), "/")) %>% tbl_view
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(DateFull), "/")[[1]][[3]])
df_Data2
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(DateFull), "/")[[1]][[3]]) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
splitDateFull <- strsplit(as.character(df_Data2$DateFull), "/")
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(DateFull, "/")[[1]][[3]]) %>% View
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(DateFull), "/")) %>% View
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(DateFull), "/")[3]) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(DateFull), "/")[3]) %>% View
df_Data2 <- df_Data2 %>% mutate(YEAR = strsplit(as.character(DateFull), "/")[3]) %>% View
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(DateFull), "/"))
df_Data2 <- df_Data2 %>% mutate(YEAR = DayMonthYear[3]) %>% View
require("jsonlite")
df_Data2 <- df_Data2 %>% mutate(YEAR = DayMonthYear[[3]]) %>% View
df_Data2
df_Data2 <- df_Data2 %>% mutate(THEYEAR = DayMonthYear[3]) %>% View
df_Data2$DayMonthYear[3]
df_Data2$DayMonthYear
df_Data2$DayMonthYear[1]
df_Data2$DayMonthYear[2]
df_Data2$DayMonthYear[999]
df_Data2$DayMonthYear[999][1]
df_Data2$DayMonthYear[[999]][[1]]
df_Data2$DayMonthYear[[999]][[3]]
df_Data2 <- df_Data2 %>% mutate(THEYEAR = [[row]][[3]]) %>% View
df_Data2 <- df_Data2 %>% mutate(THEYEAR = [[as.numeric(row)]][[3]]) %>% View
df_Data2 <- df_Data2 %>% mutate(YEAR = [[row_number(df_Data2)]][[3]]) %>% View
df_Data2 <- df_Data2 %>% mutate_each(YEAR = [[3]]) %>% View
df_Data2 <- df_Data2 %>% mutate_each(YEAR = DayMonthYear[[3]]) %>% View
require("tidyr")
df_Data2 <- df_Data2 %>% separate(DayMonthYear, c("DAY", "MONTH", "YEAR")) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
splitDateFull <- strsplit(as.character(df_Data2$DateFull), "/")
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(DateFull), "/"))
df_Data2 <- df_Data2 %>% separate(DayMonthYear, c("c", "DAY", "MONTH", "YEAR")) %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(DateFull), "/"))
df_Data2 <- df_Data2 %>% separate(DayMonthYear, c("c", "DAY", "MONTH", "YEAR"))
df_Data2 <- df_Data2 %>% mutate(HourMinuteSecond = strsplit(as.character(df_Data2$TimeFull), ";"))
df_Data2 <- df_Data2 %>% separate(HourMinuteSecond, c("d", "Hour", "Minute", "Second"))
df_Data2 %>% tbl_df
df_Data2 %>% View
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(DateFull), "/"))
df_Data2 <- df_Data2 %>% separate(DayMonthYear, c("c", "DAY", "MONTH", "YEAR"))
df_Data2 <- df_Data2 %>% mutate(HourMinuteSecond = strsplit(as.character(df_Data2$TimeFull), ";"))
df_Data2 <- df_Data2 %>% separate(HourMinuteSecond, c("d", "Hour", "Minute", "Second"))
df_Data2 <- df_Data2 %>% mutate(ActiveEnergyConsumedPerMinute = GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3)
df_Data2 %>% group_by(Hour, MONTH) %>% summarise(avg(ActiveEnergyConsumedPerMinute))
df_Data2 %>% group_by(Hour, MONTH) %>% summarise(average(ActiveEnergyConsumedPerMinute))
df_Data2 %>% group_by(Hour, MONTH) %>% summarise(mean(ActiveEnergyConsumedPerMinute))
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=Month, y=Hour, LABEL=as.character(mean(ActiveEnergyConsumedPerMinute))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=HOUR, LABEL=as.character(mean(ActiveEnergyConsumedPerMinute))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, LABEL=as.character(mean(ActiveEnergyConsumedPerMinute))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, LABEL=as.character(mean(ActiveEnergyConsumedPerMinute))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=as.character(mean(ActiveEnergyConsumedPerMinute))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=AvgActiveEnergyConsumerPerMinute),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
df_Data2 %>% group_by(Hour, MONTH) %>% summarise(AvgActiveEnergyConsumedPerMinute = mean(ActiveEnergyConsumedPerMinute))
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=AvgActiveEnergyConsumedPerMinute),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
df_Data2 <- df_Data2 %>% group_by(Hour, MONTH) %>% summarise(AvgActiveEnergyConsumedPerMinute = mean(ActiveEnergyConsumedPerMinute))
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=AvgActiveEnergyConsumedPerMinute),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
)
shiny::runApp('02 Shiny')
df_Data2 <- df_Data2 %>% summarise(KPI = ifelse(AvgActiveEnergyConsumedPerMinute < 15.26, 'Low', ifelse(AvgActiveEnergyConsumedPerMinute < 22.26, 'Medium', 'High')))
df_Data2 <- df_Data2 %>% summarise(KPI = ifelse(AvgActiveEnergyConsumedPerMinute < 15.26, 'Low', ifelse(AvgActiveEnergyConsumedPerMinute < 22.26, 'Medium', 'High')))
df_Data2 <- df_Data2 %>% summarise(KPI = if(AvgActiveEnergyConsumedPerMinute < 15.26 {'Low'} else if (AvgActiveEnergyConsumedPerMinute < 22.26) {'Medium'} else {'High'}))
df_Data2 <- df_Data2 %>% summarise(KPI = 'Low')
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=AvgActiveEnergyConsumedPerMinute),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
) +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=rv$alpha),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=AvgActiveEnergyConsumedPerMinute),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
) +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
position=position_identity()
)
View(df_Data2)
df_Data2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="Select * from HOUSEHOLD_POWER_CONSUMPTION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df_Data2 <- df_Data2 %>% mutate(DayMonthYear = strsplit(as.character(DateFull), "/"))
df_Data2 <- df_Data2 %>% separate(DayMonthYear, c("c", "DAY", "MONTH", "YEAR"))
df_Data2 <- df_Data2 %>% mutate(HourMinuteSecond = strsplit(as.character(df_Data2$TimeFull), ";"))
df_Data2 <- df_Data2 %>% separate(HourMinuteSecond, c("d", "Hour", "Minute", "Second"))
df_Data2 <- df_Data2 %>% mutate(ActiveEnergyConsumedPerMinute = GLOBALACTIVEPOWER * 1000/60 - SUBMETERING1 - SUBMETERING2 - SUBMETERING3)
df_Data2 <- df_Data2 %>% group_by(Hour, MONTH) %>% summarise(AvgActiveEnergyConsumedPerMinute = mean(ActiveEnergyConsumedPerMinute))
df_Data2 <- df_Data2 %>% mutate(KPI = 'Low')
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=AvgActiveEnergyConsumedPerMinute),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
) +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
position=position_identity()
)
df_Data2 <- df_Data2 %>% mutate(KPI = if (AvgActiveEnergyConsumedPerMinute < 15.26 {'Low'} else {'High'}))
df_Data2 <- df_Data2 %>% mutate(KPI = 'High')
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(x="Month", y="Hour") +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, label=AvgActiveEnergyConsumedPerMinute),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
#position=position_identity()
position=position_identity()
) +
layer(data=df_Data2,
mapping=aes(x=MONTH, y=Hour, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
position=position_identity()
)
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
install.packages('devtools')
require("jsonlite")
devtools::install_github('rstudio/rsconnect')
library(rsconnect)
shinyapps::setAccountInfo(name='osiris22692',
token='288A177807F13328D1C5EB7BFB68E3C6',
secret='hrPM5w9MtwSVdwowz77kF/mlS9qGaT5Sg3gPx/4Q')
library("shiny", lib.loc="~/R/win-library/3.2")
shinyapps::setAccountInfo(name='osiris22692',
token='288A177807F13328D1C5EB7BFB68E3C6',
secret='hrPM5w9MtwSVdwowz77kF/mlS9qGaT5Sg3gPx/4Q')
shinyapps::setAccountInfo(name='osiris22692', token='288A177807F13328D1C5EB7BFB68E3C6', secret='hrPM5w9MtwSVdwowz77kF/mlS9qGaT5Sg3gPx/4Q')
shinyapps::setAccountInfo(name='osiris22692', token='6F91D51ADB2C562E63A5E50E762A589D', secret='7QDd+uWAiql2GLhIMDabzOWCdO9QIXNvQRg+6LvU')
rsconnect::setAccountInfo(name='osiris22692', token='6F91D51ADB2C562E63A5E50E762A589D', secret='7QDd+uWAiql2GLhIMDabzOWCdO9QIXNvQRg+6LvU')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
